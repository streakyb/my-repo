{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/mbacon/SC-API/1.0.0"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Texecom/SmartCom-MDB/1.0.0"
  }, {
    "description" : "SmartCom",
    "url" : "https://SmartCom.texe.com/Texecom/SmartCom/1.0.0"
  } ],
  "info" : {
    "version" : "1.0.0",
    "title" : "smartcom-api",
    "description" : "SmartCom local API"
  },
  "paths" : {
    "/files" : {
      "get" : {
        "description" : "List of files",
        "operationId" : "getFiles",
        "responses" : {
          "200" : {
            "description" : "List of all available files to download",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Files"
                  } ]
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/files/{file}" : {
      "parameters" : [ {
        "name" : "file",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Get  file",
        "operationId" : "getFile",
        "responses" : {
          "200" : {
            "description" : "Get  logfile",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "202" : {
            "$ref" : "#/components/responses/Accepted"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/files/log" : {
      "get" : {
        "description" : "Get log file",
        "operationId" : "getLogFile",
        "responses" : {
          "200" : {
            "description" : "Get latest logfile",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "202" : {
            "$ref" : "#/components/responses/Accepted"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/interfaces" : {
      "get" : {
        "description" : "List of interfaces",
        "operationId" : "getInterface",
        "responses" : {
          "200" : {
            "description" : "List of all network interfaces on unit",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Interfaces"
                  } ]
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/interfaces/{interface}" : {
      "parameters" : [ {
        "name" : "interface",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Get info on selected interface",
        "operationId" : "getInterfaces",
        "responses" : {
          "200" : {
            "description" : "Interface Information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/WiFi"
                  }, {
                    "$ref" : "#/components/schemas/Ethernet"
                  }, {
                    "$ref" : "#/components/schemas/GSM"
                  } ]
                }
              }
            }
          },
          "202" : {
            "$ref" : "#/components/responses/Accepted"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/interfaces/{interface}/config" : {
      "parameters" : [ {
        "name" : "interface",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      } ],
      "get" : {
        "description" : "Get config on selected interface",
        "operationId" : "getInterfacesConfig",
        "responses" : {
          "200" : {
            "description" : "Interface Config",
            "content" : {
              "application/json" : {
                "schema" : {
                  "anyOf" : [ {
                    "$ref" : "#/components/schemas/IpSettings"
                  }, {
                    "$ref" : "#/components/schemas/IpAllocation"
                  }, {
                    "$ref" : "#/components/schemas/SSID"
                  }, {
                    "$ref" : "#/components/schemas/WifiPassword"
                  } ]
                }
              }
            }
          }
        }
      },
      "post" : {
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "#/components/schemas/SSID"
                }, {
                  "$ref" : "#/components/schemas/WifiPassword"
                }, {
                  "$ref" : "#/components/schemas/IpAllocation"
                }, {
                  "$ref" : "#/components/schemas/IpSettings"
                } ]
              }
            }
          }
        },
        "operationId" : "Configure settings",
        "responses" : {
          "200" : {
            "description" : "successfully cofigured settings"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "405" : {
            "$ref" : "#/components/responses/MethodNotAllowed"
          },
          "5XX" : {
            "$ref" : "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "IpSettings" : {
        "type" : "object",
        "properties" : {
          "IpSettings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/IPAddress"
            }, {
              "$ref" : "#/components/schemas/GatewayIpAddress"
            }, {
              "$ref" : "#/components/schemas/Subnet"
            }, {
              "$ref" : "#/components/schemas/DNSServers"
            } ]
          }
        }
      },
      "IpAllocation" : {
        "type" : "object",
        "properties" : {
          "IpAllocation" : {
            "type" : "string",
            "enum" : [ "Static", "DHCPClient" ],
            "example" : "Static"
          }
        }
      },
      "SSID" : {
        "type" : "string",
        "example" : "MyWifiSSID"
      },
      "WifiPassword" : {
        "type" : "object",
        "properties" : {
          "WifiPassword" : {
            "type" : "string",
            "format" : "password",
            "example" : "fasdfdjl&*(2493"
          }
        }
      },
      "ScanTime" : {
        "type" : "string",
        "format" : "date-time",
        "example" : "2017-07-21T17:32:28Z"
      },
      "IPAddress" : {
        "type" : "object",
        "properties" : {
          "IPAddress" : {
            "type" : "string",
            "format" : "ipV4",
            "example" : "10.0.1.1"
          }
        }
      },
      "GatewayIpAddress" : {
        "type" : "object",
        "properties" : {
          "GatewayIpAddress" : {
            "type" : "string",
            "format" : "ipV4",
            "example" : "10.0.1.1"
          }
        }
      },
      "Subnet" : {
        "type" : "object",
        "properties" : {
          "Subnet" : {
            "type" : "string",
            "format" : "ipV4",
            "example" : "255.255.255.0"
          }
        }
      },
      "AvailableSSID" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "example" : [ "SSID-1", "SSID-2" ]
        }
      },
      "DNSServer" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "format" : "ipV4",
          "example" : [ "8.8.8.8", "8.8.2.2" ]
        }
      },
      "DNSServers" : {
        "title" : "DNSServers",
        "type" : "object",
        "properties" : {
          "DNSServers" : {
            "$ref" : "#/components/schemas/DNSServer"
          }
        }
      },
      "LinkUp" : {
        "type" : "boolean",
        "example" : "true"
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ]
      },
      "OutboundComms" : {
        "type" : "boolean",
        "example" : true
      },
      "Files" : {
        "title" : "Logfiles",
        "type" : "object",
        "properties" : {
          "Files" : {
            "$ref" : "#/components/schemas/File"
          }
        }
      },
      "File" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "example" : [ "file1.txt", "file2.txt" ]
        }
      },
      "Interfaces" : {
        "title" : "Interfaces",
        "type" : "object",
        "properties" : {
          "Interfaces" : {
            "$ref" : "#/components/schemas/Interface"
          }
        }
      },
      "Interface" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "example" : [ "eth0", "wlan0", "lo" ]
        }
      },
      "ConnectionType" : {
        "type" : "string",
        "enum" : [ "3G", "2G" ]
      },
      "OperatorName" : {
        "type" : "string",
        "example" : "O2"
      },
      "SignalStrength" : {
        "type" : "integer",
        "minimum" : 0,
        "maximum" : 5,
        "example" : 3
      },
      "WiFiInfo" : {
        "title" : "wifi",
        "type" : "object",
        "properties" : {
          "LinkUp" : {
            "$ref" : "#/components/schemas/LinkUp"
          },
          "OutboundComms" : {
            "$ref" : "#/components/schemas/OutboundComms"
          },
          "SSID" : {
            "$ref" : "#/components/schemas/SSID"
          },
          "AvailableSSID" : {
            "$ref" : "#/components/schemas/AvailableSSID"
          }
        }
      },
      "WiFi" : {
        "title" : "wifi",
        "type" : "object",
        "properties" : {
          "WiFi" : {
            "$ref" : "#/components/schemas/WiFiInfo"
          }
        }
      },
      "EthernetInfo" : {
        "title" : "ethernet",
        "type" : "object",
        "properties" : {
          "LinkUp" : {
            "$ref" : "#/components/schemas/LinkUp"
          },
          "OutboundComms" : {
            "$ref" : "#/components/schemas/OutboundComms"
          }
        }
      },
      "Ethernet" : {
        "title" : "ethernet",
        "type" : "object",
        "properties" : {
          "Ethernet" : {
            "$ref" : "#/components/schemas/EthernetInfo"
          }
        }
      },
      "GSMInfo" : {
        "type" : "object",
        "properties" : {
          "ScanTime" : {
            "$ref" : "#/components/schemas/ScanTime"
          },
          "OutboundComms" : {
            "$ref" : "#/components/schemas/OutboundComms"
          },
          "Networks" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "connectionType" : {
                  "$ref" : "#/components/schemas/ConnectionType"
                },
                "OperatorName" : {
                  "$ref" : "#/components/schemas/OperatorName"
                },
                "SignalStrength" : {
                  "$ref" : "#/components/schemas/SignalStrength"
                }
              }
            }
          }
        }
      },
      "GSM" : {
        "type" : "object",
        "properties" : {
          "GSM" : {
            "$ref" : "#/components/schemas/GSMInfo"
          }
        }
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Bad request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Not Found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "Forbidden if the user does not have read permission.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "MethodNotAllowed" : {
        "description" : "Method not Allowed",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "UnexpectedError" : {
        "description" : "Method not Allowed",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      },
      "Accepted" : {
        "description" : "The request has been accepted for processing, but the processing has not been completed. Retry after time in header",
        "headers" : {
          "Retry-After" : {
            "description" : "retry this request after this period (in seconds)",
            "schema" : {
              "format" : "int32",
              "type" : "integer"
            }
          }
        },
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  },
  "security" : [ {
    "BasicAuth" : [ ]
  } ]
}